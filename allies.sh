members_allies() {
 #/Muda para o diret√≥rio tempor√°rio
 cd $TMP
 #/Adiciona uma linha em branco ao arquivo allies.txt
 echo "" >>allies.txt
 clan_id
 #/Verifica se a vari√°vel CLD n√£o est√° vazia
 if [ -n "$CLD" ]; then
  #/Imprime uma mensagem de auserAgent.txtliza√ß√£o
  echo -e "${ww_}\nUpdating clan members into allies\n\e[00m"
  #/Loop de 5 a 1
  for num in `seq 5 -1 1`; do
   #/Imprime o link do cl√£
   echo -e "${b__}/clan/${CLD}/${num}\e[00m"
   #/Executa o comando SOURCE com o URL do cl√£ e um agente de usu√°rio aleat√≥rio, filtra o resultado com grep e awk e adiciona ao arquivo allies.txt
   (
    w3m -cookie -o http_proxy=$PROXY -o accept_encoding=UTF-8 -debug -dump_source "${URL}/clan/${CLD}/${num}" -o user_agent="$(shuf -n1 $TMP/userAgent.txt)" | grep -o -E "[/]>([[:upper:]][[:lower:]]{0,15}[[:space:]]{0,1}[[:upper:]]{0,1}[[:lower:]]{0,14},[[:space:]])<s" | awk -F"[>]" '{print $2}' | awk -F"[,]" '{print $1}' | sed 's,\ ,_,' >>allies.txt
   ) </dev/null &>/dev/null &
   time_exit 17
#   sleep 1s
  done
  #/Ordena o arquivo allies.txt e remove duplicatas
  sort -u allies.txt -o allies.txt
 fi
 #/Imprime informa√ß√µes sobre os aliados para Coliseum e King of the Immortals
 echo -e "${ww_}\nAllies for Coliseum and King of the Immortals:\n\e[00m"
 cat allies.txt
 #/Adiciona um usu√°rio ao arquivo allies.txt decodificando uma string base64
 echo "SW5mZXJuYWwgU2hlbGwK" | base64 -d >>allies.txt
 #/Imprime uma mensagem para esperar e auserAgent.txtrda 5 segundos antes de contiuserAgent.txtr
 echo -e "${ww_}Wait to continue.  üëà\e[00m"
 sleep 5
}
id_allies() {
 #/Imprime uma mensagem de busca de aliados na lista de amigos
 echo -e "${ww_}Looking for allies on friends list\e[00m"
 #/Muda para o diret√≥rio tempor√°rio
 cd $TMP
 #/Imprime o caminho dos amigos
 echo -e "${b__}/mail/friends\e[00m"
 #/Executa o comando SOURCE com o URL dos amigos e um agente de usu√°rio aleat√≥rio e salva o resultado em um arquivo tempor√°rio
 (
  w3m -cookie -o http_proxy=$PROXY -o accept_encoding=UTF-8 -debug -dump_source "${URL}/mail/friends" -o user_agent="$(shuf -n1 $TMP/userAgent.txt)" >$TMP/SRC
 ) </dev/null &>/dev/null &
 time_exit 17
 #/Obt√©m o n√∫mero de p√°ginas de amigos
#  NPG=$(cat $TMP/SRC | sed 's/href=/\n/g' | grep "/mail/friends/[0-9]'>&#62;&#62;" | cut -d\' -f2 | cut -d\/ -f4)
  NPG=$(cat $TMP/SRC | grep -o -E '/mail/friends/([[:digit:]]{0,4})[^[:alnum:]]{4}62[^[:alnum:]]{3}62[^[:alnum:]]' | sed 's/\/mail\/friends\/\([[:digit:]]\{0,4\}\).*/\1/')
  #/Limpa o arquivo tmp.txt
  >tmp.txt
  #/Verifica se NPG est√° vazio
  if [ -z "$NPG" ]; then
   #/Imprime o caminho dos amigos
   echo -e "${b__}/mail/friends\e[00m"
   #/Executa o comando SOURCE com o URL dos amigos e um agente de usu√°rio aleat√≥rio, filtra o resultado com sed e grep e adiciona ao arquivo tmp.txt
   (
    w3m -cookie -o http_proxy=$PROXY -o accept_encoding=UTF-8 -debug -dump_source "${URL}/mail/friends" -o user_agent="$(shuf -n1 $TMP/userAgent.txt)" | sed 's,/user/,\n/user/,g' |  grep '/user/' | grep '/mail/' | cut -d\< -f1 >>tmp.txt
   ) </dev/null &>/dev/null &
   time_exit 17
  else
   #/Loop do n√∫mero de p√°ginas de amigos at√© 1
   for num in `seq "$NPG" -1 1`; do
   #/Imprime a p√°gina auserAgent.txtl da lista de amigos
    echo -e "${ww_}Friends list page ${num}\e[00m\n${b__}/mail/friends/${num}\e[00m";
    #/Executa o comando SOURCE com o URL da p√°gina auserAgent.txtl dos amigos e um agente de usu√°rio aleat√≥rio, filtra o resultado com sed e grep e adiciona ao arquivo tmp.txt
    (
     w3m -cookie -o http_proxy=$PROXY -o accept_encoding=UTF-8 -debug -dump_source "${URL}/mail/friends/${num}" -o user_agent="$(shuf -n1 $TMP/userAgent.txt)" | sed 's,/user/,\n/user/,g' | grep '/user/' | grep '/mail/' | cut -d\< -f1 >>tmp.txt
    ) </dev/null &>/dev/null &
    time_exit 17
#    sleep 1s
   done
  fi
  #/Ordena o arquivo tmp.txt e remove duplicatas
  sort -u tmp.txt -o tmp.txt
  #/Filtra o conte√∫do do arquivo tmp.txt com cut e sed e salva no arquivo allies.txt
  cat tmp.txt | cut -d\> -f2 | sed 's,\ ,_,' >allies.txt
}
clan_allies() {
 #/Verifica se a vari√°vel CLD n√£o est√° vazia
 clan_id
 if [ -n "$CLD" ]; then
  #/Muda para o diret√≥rio tempor√°rio
  cd $TMP
  #/Adiciona um cl√£ ao arquivo callies.txt decodificando uma string base64
  echo "VHJvcGEgSW5mZXJuYWwK" | base64 -d >callies.txt
  #/Filtra o conte√∫do do arquivo tmp.txt com cut e salva no arquivo ids.txt
  cat tmp.txt | cut -d/ -f3 >ids.txt
  #/Imprime uma mensagem de busca de aliados do cl√£ na lista de amigos
  echo -e "${ww_}\nClan allies by Leader/Deputy on friends list\n\e[00m"
  #/Configura√ß√£o do loop
  Lnl=$(cat ids.txt | wc -l); nl=1; ts=0
  #/Loop do n√∫mero de linhas de ids.txt at√© 1
  for num in `seq "$Lnl" -1 "$nl"`; do
   #/Obt√©m o IDN auserAgent.txtl
   IDN=$(cat ids.txt | tail -n $Lnl | head -n 1)
   #/Verifica se IDN n√£o est√° vazio
   if [ -n "$IDN" ]; then
    #/Imprime o caminho do usu√°rio auserAgent.txtl
    echo -e "${Lnl} ${b__}/user/${IDN}\e[00m"
    #/Executa o comando SOURCE com o URL do usu√°rio auserAgent.txtl e um agente de usu√°rio aleat√≥rio e salva o resultado em um arquivo tempor√°rio
    (
     w3m -cookie -o http_proxy=$PROXY -o accept_encoding=UTF-8 -debug -dump_source "${URL}/user/${IDN}" -o user_agent="$(shuf -n1 $TMP/userAgent.txt)" >$TMP/SRC
    ) </dev/null &>/dev/null &
    time_exit 17
    #/Obt√©m o l√≠der e/ou vice-l√≠der do cl√£ auserAgent.txtl
    LEADPU=$(cat $TMP/SRC | sed 's,/clan/,\n/clan/,g' |  grep -E "</a>, <span class='blue'|</a>, <span class='green'" | cut -d\< -f1 |cut -d\> -f2)
    #/Obt√©m o cl√£ auserAgent.txtl
    alCLAN=$(cat $TMP/SRC | grep -E -o '/clan/[0-9]{1,3}' | tail -n1)
    #/Imprime o l√≠der ou vice-l√≠der e o cl√£ auserAgent.txtl
    echo -e "${bi_} ${LEADPU} - ${alCLAN}\e[00m"
    #Verifica se LEADPU n√£o est√° vazio
    if [ -n "$LEADPU" ]; then
     #/Incrementa a vari√°vel ts
     ts=$((ts + 1))
     #/Adiciona LEADPU ao arquivo callies.txt substituindo espa√ßos por underscores
     echo $LEADPU | sed 's,\ ,_,' >>callies.txt
     #/Imprime uma mensagem de aliado adicionado
     echo -e "${ww_} ${ts}. Ally ${LEADPU} ${alCLAN} added.\e[00m"
     #/Ordena o arquivo callies.txt e remove duplicatas
     sort -u callies.txt -o callies.txt
    fi
    Lnl=$((Lnl - 1))
   fi
   sleep 1s
  done
 fi
}
conf_allies() {
 #/Define o diret√≥rio tempor√°rio e limpa a tela do terminal
 cd $TMP
 clear
 #/Mostra a mensagem de introdu√ß√£o e op√ß√µes para o usu√°rio
 echo -e "${ww_}\nThe script will consider users on your friends list and \nClan as allies.\nLeader/Deputy on friend list will add \nClan allies.\n\e[00m\n1) Add/Update alliances(All Battles)\n\n2) Add/Update just Herois alliances(Coliseum/King of immortals)\n\n3) Add/Update just Clan alliances(Altars,Clan Coliseum and Clan Fight)\n\n4) Do nothing\n"
 #/Verifica se o arquivo .al_file existe e tem tamanho maior que 0, e l√™ o seu conte√∫do
 if [ -f "$HOME/twm/.al_file" ] && [ -s "$HOME/twm/.al_file" ]; then
  AL=$(cat $HOME/twm/.al_file)
 else
  #/Solicita ao usu√°rio que informe uma op√ß√£o, com tempo limite de 300 segundos (5 minutos), e armazena na vari√°vel AL
  read -p "Set up alliances[1 to 4]: " -t 300 -e -n 1 AL
 fi
 #/Verifica userAgent.txtl op√ß√£o foi escolhida pelo usu√°rio e executa as respectivas fun√ß√µes
 case $AL in
 #/Op√ß√£o 1: Ativa alian√ßas em todas as batalhas (chama as fun√ß√µes AlliesID, ClanAlliesID e Members, define a vari√°vel ALD como 1, armazena o valor "1" no arquivo .al_file e exibe uma mensagem de confirma√ß√£o)
 (1)
  id_allies; clan_allies;
  members_allies; ALD=1;
  echo "1" >$HOME/twm/.al_file;
  echo "Alliances on all battles active" ;;
 #/Op√ß√£o 2: Ativa alian√ßas apenas em Herois (chama as fun√ß√µes AlliesID e Members, verifica se o arquivo callies.txt existe e, se existir, o esvazia, define a vari√°vel ALD como 1, armazena o valor "2" no arquivo .al_file e exibe uma mensagem de confirma√ß√£o)
 (2)
  id_allies; members_allies;
  if [ -e "$TMP/callies.txt" ]; then
   >$TMP/callies.txt
  fi
  ALD=1; echo "2" >$HOME/twm/.al_file;
  echo "Just Herois alliances now." ;;
 #/Op√ß√£o 3: Ativa alian√ßas apenas no Clan (chama as fun√ß√µes AlliesID, ClanAlliesID e verifica se o arquivo allies.txt existe e, se existir, o esvazia, desfaz a defini√ß√£o da vari√°vel ALD, armazena o valor "3" no arquivo .al_file e exibe uma mensagem de confirma√ß√£o)
 (3)
  id_allies; clan_allies;
  if [ -e "$TMP/allies.txt" ]; then
   >$TMP/allies.txt
  fi
  unset ALD; echo "3" >$HOME/twm/.al_file;
  echo "Just Clan alliances now." ;;
 #/Op√ß√£o 4: N√£o faz nada (exibe uma mensagem de confirma√ß√£o e adiciona linhas vazias nos arquivos allies.txt e callies.txt, caso existam)
 (4)
  echo "Nothing changed."; ALD=1;
  echo "4" >$HOME/twm/.al_file;
  >>allies.txt; >>callies.txt ;;
 #/Nenhuma op√ß√£o v√°lida selecionada
 (*)
  clear;
  if [ -n "$AL" ]; then
   echo -e "\n Invalid option: $(echo $AL)"
   kill -9 $$
  else
   echo -e "\n Time exceeded!"
  fi ;;
 esac
 #/Adiciona um usu√°rio ao arquivo allies.txt decodificando uma string base64
 echo "SW5mZXJuYWwgU2hlbGwK" | base64 -d >>allies.txt
 #/Ordena o arquivo allies.txt e remove duplicatas
 sort -u allies.txt -o allies.txt
 #/Adiciona um cl√£ ao arquivo callies.txt decodificando uma string base64
 echo "VHJvcGEgSW5mZXJuYWwK" | base64 -d >>callies.txt
 #/Ordena o arquivo callies.txt e remove duplicatas
 sort -u callies.txt -o callies.txt
 #/Limpa as vari√°veis usadas na fun√ß√£o
 unset ts IDN LEADPU alCLA AL NPG
}
