# $HOME/$twm_dir/king.lib
# Copyright (c) 2019-2024 Ueliton Alves Dos Santos
# Licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License

#/king/kingatk/?r=0
#/king/attack/?r=0
#/king/attackrandom/?r=0
#/king/?out_gate

king_fight () {

 #/enterFight
 cd $TMP
 local LA=4 # interval attack
 local HPER="38" # % to heal
 local RPER=5 # % to random
 cl_access () {
#  sed -n 's/.*\(\/[a-z]\{3,12\}\/[A-Za-z]\{3,12\}\/[^[:alnum:]][a-z]\{1,3\}[^[:alnum:]][0-9]\+\).*/\1/p'
#  sed -n 's/.*\(\/king\/attack\/[^A-Za-z0-9_]r[^A-Za-z0-9_][0-9]\+\).*/\1/p' $TMP/SRC|sed -n 1p >ATK 2> /dev/null
  grep -o -E '(/king/attack/[?]r[=][0-9]+)' $TMP/SRC|sed -n 1p >ATK 2> /dev/null
  grep -o -E '(/king/kingatk/[?]r[=][0-9]+)' $TMP/SRC|sed -n 1p >KINGATK 2> /dev/null
  grep -o -E '(/king/at[a-z]{0,3}k[a-z]{3,6}/[?]r[=][0-9]+)' $TMP/SRC >ATKRND 2> /dev/null
  grep -o -E '(/king/dodge/[?]r[=][0-9]+)' $TMP/SRC >DODGE 2> /dev/null
  grep -o -E '(/king/stone/[?]r[=][0-9]+)' $TMP/SRC >STONE 2> /dev/null
  grep -o -E '(/king/heal/[?]r[=][0-9]+)' $TMP/SRC >HEAL 2> /dev/null
  grep --color -o -E '/images/icon/race/(0|1).png[^[:alnum:]] alt=[^[:alnum:]][^[:alnum:]]/[^[:alnum:]].*[^[:alnum:]]/span' $TMP/SRC|sed 's,/images/,\n/images/,g'|awk -F'[> ][ <]' '{print $2}'|sed -n 's,\ ,_,;4p' >USER 2> /dev/null
#  grep --color -o -E '/images/icon/race/(0|1).png[^[:alnum:]] alt=[^[:alnum:]][^[:alnum:]]/[^[:alnum:]].*[^[:alnum:]]/span' $TMP/SRC|awk -F'[> ][ <]' '{print $2}'|sed 's,\ ,_,' >Iam 2> /dev/null
  grep -o -E "(hp)[^A-Za-z0-9_]{1,4}[0-9]{1,6}" $TMP/SRC|sed "s,hp[']\/[>],,;s,\ ,," >HP 2> /dev/null
  grep -o -E "(nbsp)[^A-Za-z0-9_]{1,2}[0-9]{1,6}" $TMP/SRC|sed -n 's,nbsp[;],,;s,\ ,,;1p' >HP2 2> /dev/null
  RHP=$(awk -v ush=`dd if=HP 2>/dev/null` -v rper="$RPER" 'BEGIN { printf "%.0f", ush * rper / 100 + ush }')
  HLHP=$(awk -v ush=`dd if=FULL 2>/dev/null` -v hper="$HPER" 'BEGIN { printf "%.0f", ush * hper / 100 }')
  if grep -q -o '/dodge/' $TMP/SRC ; then
   printf "\n     🙇‍ "
   w3m -dump -T text/html "$TMP/SRC"|head -n 18|sed '0,/^\([a-z]\{2\}\)[[:space:]]\([0-9]\{1,6\}\)\([0-9]\{2\}\):\([0-9]\{2\}\)/s//\♥️\2 ⏰\3:\4/;s,\[0\],\🔴,g;s,\[1\]\ ,\🔵,g;s,\[king\],👑,g;s,\[stone\],\ 💪,;s,\[herb\],\ 🌿,;s,\[grass\],\ 🌿,g;s,\[potio\],\ 💊,;s,\ \[health\]\ ,\ 🧡,;s,\ \[icon\]\ ,\ 🐾,g;s,\[rip\]\ ,\ 💀,g'
  else
   (
    w3m -cookie -o http_proxy=$PROXY -o accept_encoding=UTF-8 -debug -dump_source "${URL}/king" -o user_agent="$vUserAgent" >$TMP/SRC
   ) </dev/null &>/dev/null &
   time_exit 17
   #/king/unrip/?r=1682796653
   grep -o -E '(/king/unrip/[^A-Za-z0-9_]r[^A-Za-z0-9_][0-9]+)' $TMP/SRC >UNRIP 2> /dev/null
   if grep -q -o -E '(/king/unrip/[^A-Za-z0-9_]r[^A-Za-z0-9_][0-9]+)' $TMP/SRC ; then
    (
     w3m -cookie -o http_proxy=$PROXY -o accept_encoding=UTF-8 -debug -dump_source "${URL}`dd if=UNRIP 2>/dev/null`" -o user_agent="$vUserAgent" >$TMP/SRC
    ) </dev/null &>/dev/null &
    time_exit 17
   else
    echo 1 >BREAK_LOOP
    printf "${BLACK_YELLOW}$(G_T "Battle is over").${COLOR_RESET}\n"
    sleep 3s
   fi
  fi
 }
 cl_access
 dd if=HP 2>/dev/null >old_HP
 echo $(( $(date +%s) - 20 )) >last_dodge
 echo $(( $(date +%s) - 90 )) >last_heal
 echo $(( $(date +%s) - $LA )) >last_atk
 >BREAK_LOOP
 until [ -s "BREAK_LOOP" ] ; do
  >BREAK_LOOP
  #/dodge
  if ! grep -q -o 'txt smpl grey' $TMP/SRC && [ "$(( $(date +%s) - `dd if=last_dodge 2>/dev/null` ))" -gt 20 -a "$(( $(date +%s) - `dd if=last_dodge 2>/dev/null` ))" -lt 300 ] && awk -v ush=`dd if=HP 2>/dev/null` -v oldhp=`dd if=old_HP 2>/dev/null` 'BEGIN { exit !(ush < oldhp) }' ; then
   (
    w3m -cookie -o http_proxy=$PROXY -o accept_encoding=UTF-8 -debug -dump_source "${URL}`dd if=DODGE 2>/dev/null`" -o user_agent="$vUserAgent" >$TMP/SRC
   ) </dev/null &>/dev/null &
   time_exit 17
   cl_access
   dd if=HP 2>/dev/null >old_HP ; date +%s >last_dodge
  #/heal
  elif awk -v ush=`dd if=HP 2>/dev/null` -v hlhp="$HLHP" 'BEGIN { exit !(ush < hlhp) }' && [ "$(( $(date +%s) - `dd if=last_heal 2>/dev/null` ))" -gt 90 -a "$(( $(date +%s) - `dd if=last_heal 2>/dev/null` ))" -lt 300 ] ; then
   (
    w3m -cookie -o http_proxy=$PROXY -o accept_encoding=UTF-8 -debug -dump_source "${URL}`dd if=HEAL 2>/dev/null`" -o user_agent="$vUserAgent" >$TMP/SRC
   ) </dev/null &>/dev/null &
   time_exit 17
   cl_access
   dd if=HP 2>/dev/null >FULL ; date +%s >last_heal
#  sleep 0.3s
  #/attack_all
  elif awk -v latk="$(( $(date +%s) - `dd if=last_atk 2>/dev/null` ))" -v atktime="$LA" 'BEGIN { exit !(latk > atktime) }' ; then
   if grep -q -o -E '(king/kingatk/[^A-Za-z0-9_]r[^A-Za-z0-9_][0-9]+)' $TMP/SRC ; then  #kingatk...
    (
     w3m -cookie -o http_proxy=$PROXY -o accept_encoding=UTF-8 -debug -dump_source "${URL}`dd if=KINGATK 2>/dev/null`" -o user_agent="$vUserAgent" >$TMP/SRC
    ) </dev/null &>/dev/null &
    time_exit 17
    cl_access
    #/stone...
#     if awk -v ush=`dd if=HP2 2>/dev/null` 'BEGIN { exit !(ush < 25) }' ; then
#     (
#      w3m -cookie -o http_proxy=$PROXY -o accept_encoding=UTF-8 -debug -dump_source "${URL}`dd if=STONE 2>/dev/null`" -o user_agent="$vUserAgent" >$TMP/SRC
#     ) </dev/null &>/dev/null &
#     time_exit 17
#     cl_access
#    fi #...stone
   else #...kingatk
    #/random
#    if ! grep -q -o 'txt smpl grey' $TMP/SRC && grep -q -o "`cat USER`" $HOME/allies.txt || ! grep -q -o 'txt smpl grey' $TMP/SRC && ! grep -q -o "`cat USER`" $HOME/adversary.txt ; then
    if awk -v latk="$(( $(date +%s) - `cat last_atk` ))" -v atktime="$LA" 'BEGIN { exit !(latk != atktime) }' && ! grep -q -o 'txt smpl grey' $TMP/SRC && awk -v rhp="$RHP" -v enh=`cat HP2` 'BEGIN { exit !(rhp < enh) }' || awk -v latk="$(( $(date +%s) - `cat last_atk` ))" -v atktime="$LA" 'BEGIN { exit !(latk != atktime) }' && ! grep -q -o 'txt smpl grey' $TMP/SRC && grep -q -o "`cat USER`" allies.txt ; then
     (
      w3m -cookie -o http_proxy=$PROXY -o accept_encoding=UTF-8 -debug -dump_source "${URL}`dd if=ATKRND 2>/dev/null`" -o user_agent="$vUserAgent" >$TMP/SRC
     ) </dev/null &>/dev/null &
     time_exit 17
     cl_access
     date +%s >last_atk
    fi
    #/atk...
    (
     w3m -cookie -o http_proxy=$PROXY -o accept_encoding=UTF-8 -debug -dump_source "${URL}`dd if=ATK 2>/dev/null`" -o user_agent="$vUserAgent" >$TMP/SRC
    ) </dev/null &>/dev/null &
    time_exit 17
    cl_access
   fi #...atk
   date +%s >last_atk
  else #...attack_all
   (
    w3m -cookie -o http_proxy=$PROXY -o accept_encoding=UTF-8 -debug -dump_source "${URL}/king" -o user_agent="$vUserAgent" >$src_ram
   ) </dev/null &>/dev/null &
   time_exit 17
   cl_access
   sleep 1s
  fi
 done
 unset cl_access
 func_unset
 apply_event
 printf "$(G_T "King") (✔)\n"
 sleep 10s
 clear
}
king_start () {
 case $(date +%H:%M) in
 (12:2[5-9]|16:2[5-9]|22:2[5-9])
  (
   w3m -cookie -o http_proxy=$PROXY -o accept_encoding=UTF-8 -debug -dump_source "$URL/train" -o user_agent="$vUserAgent"|grep -o -E '\(([0-9]+)\)'|sed 's/[()]//g' >$TMP/FULL
  ) </dev/null &>/dev/null &
  time_exit 17
  (
   w3m -cookie -o http_proxy=$PROXY -o accept_encoding=UTF-8 -debug -dump_source "$URL/king/enterGame" -o user_agent="$vUserAgent" >$TMP/SRC
  ) </dev/null &>/dev/null &
  time_exit 17
  printf "$(G_T "King of the Immortals will be started")...\n"
  until $(case $(date +%M) in (2[5-9]) exit 1 ;; esac) ; do
   sleep 3
  done
  (
   w3m -cookie -o http_proxy=$PROXY -o accept_encoding=UTF-8 -debug -dump_source "$URL/king/enterGame" -o user_agent="$vUserAgent" >$TMP/SRC
  ) </dev/null &>/dev/null &
  time_exit 17
  printf "\n$(G_T "King")\n$URL\n"
  sed 's/href=/\n/g' $TMP/SRC|grep '/king/'|head -n 1|awk -F"[']" '{ print $2 }' >ACCESS 2> /dev/null
  printf " 👣 $(G_T "Entering")...\n$(dd if=ACCESS 2>/dev/null)\n"
  #/wait
  printf " 😴 $(G_T "Waiting")...\n"
  grep -o 'king/kingatk/' $TMP/SRC >EXIT 2> /dev/null
  local BREAK=$(( $(date +%s) + 30 ))
  until [ -s "EXIT" ] || [ $(date +%s) -gt "$BREAK" ] ; do
   printf " 💤	...\n$(dd if=ACCESS 2>/dev/null)\n"
   (
    w3m -cookie -o http_proxy=$PROXY -o accept_encoding=UTF-8 -debug -dump_source "${URL}`dd if=ACCESS 2>/dev/null`" -o user_agent="$vUserAgent" >$TMP/SRC
   ) </dev/null &>/dev/null &
   time_exit 17
   sed 's/href=/\n/g' $TMP/SRC|grep '/king/'|head -n 1|awk -F"[']" '{ print $2 }' >ACCESS 2> /dev/null
   grep -o 'king/kingatk/' $TMP/SRC >EXIT 2> /dev/null
   sleep 2
  done
  king_fight
  ;;
 esac
}
