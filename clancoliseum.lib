# $HOME/$twm_dir/clancoliseum.lib
# Copyright (c) 2019-2024 Ueliton Alves Dos Santos
# Licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License

clancoliseum_fight () {
 cd $tmp_ram

 #/enterFight
 local LA=4 # interval attack
 local HPER=48 # % to heal
 local RPER=15 # % to random

 cf_access () {
  grep -o -E '(/clancoliseum/[a-z]{0,4}at[a-z]{0,3}k/[?]r[=][0-9]+)' $src_ram|sed -n '1p' >ATK 2> /dev/null
  grep -o -E '(/clancoliseum/at[a-z]{0,3}k[a-z]{3,6}/[?]r[=][0-9]+)' $src_ram >ATKRND 2> /dev/null
  grep -o -E '(/clancoliseum/dodge/[?]r[=][0-9]+)' $src_ram >DODGE 2> /dev/null
  grep -o -E '(/clancoliseum/heal/[?]r[=][0-9]+)' $src_ram >HEAL 2> /dev/null
  grep -o -E '([[:upper:]][[:lower:]]{0,20}( [[:upper:]][[:lower:]]{0,17})?)[[:space:]]\(' $src_ram|sed -n 's,\ [(],,;s,\ ,_,;2p' >CLAN 2> /dev/null
#  grep -o -E '([[:upper:]][[:lower:]]{0,15}( [[:upper:]][[:lower:]]{0,13})?)[[:space:]][^[:alnum:]]s' $src_ram|sed -n 's,\ [<]s,,;s,\ ,_,;2p' >USER 2> /dev/null
  grep -o -E "(hp)[^A-Za-z0-9]{1,4}[0-9]{1,6}" $src_ram|sed "s,hp[']\/[>],,;s,\ ,," >USH 2> /dev/null
  grep -o -E "(nbsp)[^A-Za-z0-9]{1,2}[0-9]{1,6}" $src_ram|sed -n 's,nbsp[;],,;s,\ ,,;1p' >ENH 2> /dev/null
  awk -v ush=`dd if=USH 2>/dev/null` -v rper="$RPER" 'BEGIN { printf "%.0f", ush * rper / 100 + ush }' >RHP
  awk -v ush=`dd if=$full_ram 2>/dev/null` -v hper="$HPER" 'BEGIN { printf "%.0f", ush * hper / 100 }' >HLHP

  if grep -q -o '/dodge/' $src_ram; then
   printf "\n     🙇‍ "
   w3m -dump -T text/html "$src_ram"|head -n 18|sed '0,/^\([a-z]\{2\}\)[[:space:]]\([0-9]\{1,6\}\)\([0-9]\{2\}\):\([0-9]\{2\}\)/s//\♥️\2 ⏰\3:\4/;s,\[0\],\🔴,g;s,\[1\],\🔵,g;s,\[stone\],\ 💪,;s,\[herb\],\ 🌿,;s,\[grass\],\ 🌿,g;s,\[potio\],\ 💊,;s,\ \[health\]\ ,\ 🧡,;s,\ \[icon\]\ ,\ 🐾,g;s,\[rip\]\ ,\ 💀,g'
  else
   echo 1 >BREAK_LOOP
   printf "${BLACK_YELLOW}$(G_T "Battle is over").${COLOR_RESET}\n"
   sleep 2s
  fi
 }
 cf_access

 >BREAK_LOOP
 dd if=USH 2>/dev/null >old_HP
 echo $(( $(date +%s) - 20 )) >last_dodge
 echo $(( $(date +%s) - 90 )) >last_heal
 echo $(( $(date +%s) - $LA )) >last_atk

 until [ -s "BREAK_LOOP" ]; do
  #/heal
  if awk -v ush=`dd if=USH 2>/dev/null` -v hlhp=`dd if=HLHP 2>/dev/null` 'BEGIN { exit !(ush < hlhp) }' && [ "$(( $(date +%s) - `dd if=last_heal 2>/dev/null` ))" -gt 90 -a "$(( $(date +%s) - `dd if=last_heal 2>/dev/null` ))" -lt 300 ]; then
   (
    w3m -cookie -o http_proxy=$PROXY -o accept_encoding=UTF-8 -debug -dump_source "${URL}`dd if=HEAL 2>/dev/null`" -o user_agent="$vUserAgent" >$src_ram
   ) </dev/null &>/dev/null &
   time_exit 17
   cf_access
   dd if=USH 2>/dev/null >old_HP
   date +%s >last_heal
  #/dodge
  elif ! grep -q -o 'txt smpl grey' $src_ram && [ "$(( $(date +%s) - `dd if=last_dodge 2>/dev/null` ))" -gt 20 -a "$(( $(date +%s) - `dd if=last_dodge 2>/dev/null` ))" -lt 300 ] && awk -v ush=`dd if=USH 2>/dev/null` -v oldhp=`dd if=old_HP 2>/dev/null` 'BEGIN { exit !(ush < oldhp) }'; then
   (
    w3m -cookie -o http_proxy=$PROXY -o accept_encoding=UTF-8 -debug -dump_source "${URL}`dd if=DODGE 2>/dev/null`" -o user_agent="$vUserAgent" >$src_ram
   ) </dev/null &>/dev/null &
   time_exit 17
   cf_access
   dd if=USH 2>/dev/null >old_HP ; date +%s >last_dodge
  #/random
  elif awk -v latk="$(( $(date +%s) - `dd if=last_atk 2>/dev/null` ))" -v atktime="$LA" 'BEGIN { exit !(latk != atktime) }' && ! grep -q -o 'txt smpl grey' $src_ram && awk -v rhp=`dd if=RHP 2>/dev/null` -v enh=`dd if=ENH 2>/dev/null` 'BEGIN { exit !(rhp < enh) }' || awk -v latk="$(( $(date +%s) - `dd if=last_atk 2>/dev/null` ))" -v atktime="$LA" 'BEGIN { exit !(latk != atktime) }' && ! grep -q -o 'txt smpl grey' $src_ram && grep -q -o "`dd if=CLAN 2>/dev/null`" $TMP/callies.txt; then
   (
    w3m -cookie -o http_proxy=$PROXY -o accept_encoding=UTF-8 -debug -dump_source "${URL}`dd if=ATKRND 2>/dev/null`" -o user_agent="$vUserAgent" >$src_ram
   ) </dev/null &>/dev/null &
   time_exit 17
   cf_access
   date +%s >last_atk
  #/attack
  elif awk -v latk="$(( $(date +%s) - `dd if=last_atk 2>/dev/null` ))" -v atktime="$LA" 'BEGIN { exit !(latk > atktime) }' ; then
   (
    w3m -cookie -o http_proxy=$PROXY -o accept_encoding=UTF-8 -debug -dump_source "${URL}`dd if=ATK 2>/dev/null`" -o user_agent="$vUserAgent" >$src_ram
   ) </dev/null &>/dev/null &
   time_exit 17
   cf_access
   date +%s >last_atk
  else
   (
    w3m -cookie -o http_proxy=$PROXY -o accept_encoding=UTF-8 -debug -dump_source "${URL}/clancoliseum" -o user_agent="$vUserAgent" >$src_ram
   ) </dev/null &>/dev/null &
   time_exit 17
   cf_access
   sleep 1s
  fi
 done

 while $(case $(date +%M) in (?5) exit 1 ;; esac); do
   printf "$(G_T "Waiting for a time limit, supposedly not to interfere in the battle.  Damn superstitions")...😒\n"
   sleep 10
 done

 rm -rf $tmp_ram
 rm $src_ram $full_ram
 unset dir_ram tmp_ram src_ram full_ram ACCESS cf_access
 #/end
 printf "$(G_T "Clan Coliseum")(✔)\n"
 sleep 10s
 clear
}

clancoliseum_start () {
 if [ -d "/dev/shm" ]; then
  dir_ram="/dev/shm/"
 else
  dir_ram="$PREFIX/tmp/"
 fi

 src_ram=$(mktemp -p $dir_ram data.XXXXXX)
 full_ram=$(mktemp -p $dir_ram data.XXXXXX)
 tmp_ram=$(mktemp -d -t twmdir.XXXXXX)
 cp -r $TMP/* $tmp_ram
 cd $tmp_ram

 case $(date +%H:%M) in
  (10:2[5-9]|14:5[5-9])
   #/FULL hp
   (
    w3m -cookie -o http_proxy=$PROXY -o accept_encoding=UTF-8 -debug -dump_source "$URL/train" -o user_agent="$vUserAgent"|grep -o -E '\(([0-9]+)\)'|sed 's/[()]//g' >$full_ram
   ) </dev/null &>/dev/null &
   time_exit 17
   #/clancoliseum/?close=reward
   (
    w3m -cookie -o http_proxy=$PROXY -o accept_encoding=UTF-8 -debug -dump_source "$URL/clancoliseum/?close=reward" -o user_agent="$vUserAgent" >$src_ram
   ) </dev/null &>/dev/null &
   time_exit 17
   #/clancoliseum/enterFight
   (
    w3m -cookie -o http_proxy=$PROXY -o accept_encoding=UTF-8 -debug -dump_source "$URL/clancoliseum/enterFight" -o user_agent="$vUserAgent" >$src_ram
   ) </dev/null &>/dev/null &
   time_exit 17
   printf "$(G_T "Clan coliseum will be started")...\n"

   case $(date +%H:%M) in
    (10:2[5-9])
     while [ $(date +%M) -gt "24" ] && [ $(date +%M) -lt "30" ]; do
      sleep 3s
     done
    ;;
    (14:5[5-9])
     while awk -v minute="$(date +%M)" 'BEGIN { exit !(minute != 00) }' && [ $(date +%M) -gt "54" ]; do
      sleep 3s
     done
    ;;
   esac

   #/clancoliseum/
   (
    w3m -cookie -o http_proxy=$PROXY -o accept_encoding=UTF-8 -debug -dump_source "$URL/clancoliseum/" -o user_agent="$vUserAgent" >$src_ram
   ) </dev/null &>/dev/null &
   time_exit 17
   printf "\n$(G_T "Clan Coliseum")\n$URL\n"
   ACCESS=$(grep -o -E '(/clancoliseum(/[a-z]+/[?]r[=][0-9]+|/))' $src_ram|grep -v 'dodge'|sed -n '1p')
   printf " 👣 $(G_T "Entering")...\n${ACCESS}\n"
   #/wait
   printf " 😴 $(G_T "Waiting")...\n"

   local BREAK=$(( $(date +%s) + 11 ))

   until grep -q -o 'clancoliseum/dodge/' $src_ram || [ "$(date +%s)" -gt "$BREAK" ]; do
    printf " 💤	...\n${ACCESS}\n"
    #/clancoliseum/
    (
     w3m -cookie -o http_proxy=$PROXY -o accept_encoding=UTF-8 -debug -dump_source "${URL}/clancoliseum/" -o user_agent="$vUserAgent" >$src_ram
    ) </dev/null &>/dev/null &
    time_exit 17
    ACCESS=$(grep -o -E '(/clancoliseum/[a-z]+/[?]r[=][0-9]+)' $src_ram|grep -v 'dodge'|sed -n '1p')
    sleep 3
   done

   if [ -n $ACCESS ]; then
    clancoliseum_fight
   else
    rm -rf $tmp_ram
    rm $src_ram $full_ram
    unset dir_ram tmp_ram src_ram full_ram ACCESS
   fi
  ;;
 esac
}
